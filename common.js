// LivenessContract Address
const livenessRadius = "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB";
const livenessRadiusAbi = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "BLOCK_MARGIN",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addRollup",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      {
        name: "rollupInfo",
        type: "tuple",
        internalType: "struct ILivenessRadius.AddRollupInfo",
        components: [
          { name: "rollupId", type: "string", internalType: "string" },
          { name: "owner", type: "address", internalType: "address" },
          {
            name: "rollupType",
            type: "string",
            internalType: "string",
          },
          {
            name: "encryptedTransactionType",
            type: "string",
            internalType: "string",
          },
          {
            name: "orderCommitmentType",
            type: "string",
            internalType: "string",
          },
          {
            name: "executorAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "validationInfo",
            type: "tuple",
            internalType: "struct ILivenessRadius.ValidationInfo",
            components: [
              {
                name: "platform",
                type: "string",
                internalType: "string",
              },
              {
                name: "serviceProvider",
                type: "string",
                internalType: "string",
              },
              {
                name: "validationServiceManager",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deregisterSequencer",
    inputs: [{ name: "clusterId", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllClusterIds",
    inputs: [],
    outputs: [{ name: "", type: "string[]", internalType: "string[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClustersByOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "string[]", internalType: "string[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClustersBySequencer",
    inputs: [{ name: "sequencer", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "string[]", internalType: "string[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getExecutorList",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      { name: "rollupId", type: "string", internalType: "string" },
    ],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxSequencerNumber",
    inputs: [{ name: "clusterId", type: "string", internalType: "string" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRollupInfo",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      { name: "rollupId", type: "string", internalType: "string" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ILivenessRadius.RollupInfo",
        components: [
          { name: "rollupId", type: "string", internalType: "string" },
          { name: "owner", type: "address", internalType: "address" },
          {
            name: "rollupType",
            type: "string",
            internalType: "string",
          },
          {
            name: "encryptedTransactionType",
            type: "string",
            internalType: "string",
          },
          {
            name: "orderCommitmentType",
            type: "string",
            internalType: "string",
          },
          {
            name: "executorAddresses",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "validationInfo",
            type: "tuple",
            internalType: "struct ILivenessRadius.ValidationInfo",
            components: [
              {
                name: "platform",
                type: "string",
                internalType: "string",
              },
              {
                name: "serviceProvider",
                type: "string",
                internalType: "string",
              },
              {
                name: "validationServiceManager",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRollupInfoList",
    inputs: [{ name: "clusterId", type: "string", internalType: "string" }],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct ILivenessRadius.RollupInfo[]",
        components: [
          { name: "rollupId", type: "string", internalType: "string" },
          { name: "owner", type: "address", internalType: "address" },
          {
            name: "rollupType",
            type: "string",
            internalType: "string",
          },
          {
            name: "encryptedTransactionType",
            type: "string",
            internalType: "string",
          },
          {
            name: "orderCommitmentType",
            type: "string",
            internalType: "string",
          },
          {
            name: "executorAddresses",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "validationInfo",
            type: "tuple",
            internalType: "struct ILivenessRadius.ValidationInfo",
            components: [
              {
                name: "platform",
                type: "string",
                internalType: "string",
              },
              {
                name: "serviceProvider",
                type: "string",
                internalType: "string",
              },
              {
                name: "validationServiceManager",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSequencerList",
    inputs: [{ name: "clusterId", type: "string", internalType: "string" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializeCluster",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      {
        name: "maxSequencerNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAddedRollup",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      { name: "rollupId", type: "string", internalType: "string" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRegisteredRollupExecutor",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      { name: "rollupId", type: "string", internalType: "string" },
      {
        name: "executorAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRegisteredSequencer",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      {
        name: "sequencerAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerRollupExecutor",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      { name: "rollupId", type: "string", internalType: "string" },
      {
        name: "executorAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerSequencer",
    inputs: [{ name: "clusterId", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AddRollup",
    inputs: [
      {
        name: "clusterId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "rollupId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "rollupOwnerAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DeregisterSequencer",
    inputs: [
      {
        name: "clusterId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "sequencerAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InitializeCluster",
    inputs: [
      {
        name: "clusterId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "maxSequencerNumber",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegisterRollupExecutor",
    inputs: [
      {
        name: "clusterId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "rollupId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "executorAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegisterSequencer",
    inputs: [
      {
        name: "clusterId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "sequencerAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
];

const validationServiceManagerAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_network", type: "address", internalType: "address" },
      {
        name: "_vaultFactory",
        type: "address",
        internalType: "address",
      },
      {
        name: "_operatorNetOptIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "_epochDuration",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "_slashingWindow",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "EPOCH_DURATION",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "NETWORK",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "OPERATOR_NET_OPT_IN",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SLASHING_WINDOW",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "START_TIME",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "VAULT_FACTORY",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calcAndCacheStakes",
    inputs: [{ name: "epoch", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "totalStake", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createNewTask",
    inputs: [
      { name: "_clusterId", type: "string", internalType: "string" },
      { name: "_rollupId", type: "string", internalType: "string" },
      {
        name: "_blockNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_blockCommitment",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCurrentEpoch",
    inputs: [],
    outputs: [{ name: "epoch", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentOperatorEachTokenStake",
    inputs: [{ name: "operator", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IValidationServiceManager.TokenStake[]",
        components: [
          { name: "token", type: "address", internalType: "address" },
          { name: "stake", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentOperatorInfos",
    inputs: [],
    outputs: [
      {
        name: "operatorInfos",
        type: "tuple[]",
        internalType: "struct IValidationServiceManager.OperatorInfo[]",
        components: [
          {
            name: "operatorAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "operatingAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "stakes",
            type: "tuple[]",
            internalType: "struct IValidationServiceManager.TokenStake[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "address",
              },
              {
                name: "stake",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          { name: "stake", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentOperatorOperatingAddress",
    inputs: [{ name: "operator", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentOperatorStake",
    inputs: [{ name: "operator", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentOperatorTokenStake",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      { name: "token", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentTokenTotalStake",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentTotalStake",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentVaults",
    inputs: [],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEpochAtTs",
    inputs: [{ name: "timestamp", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "epoch", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEpochStartTs",
    inputs: [{ name: "epoch", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "timestamp", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorByOperatingAddress",
    inputs: [
      {
        name: "operatingAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorEachTokenStake",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      { name: "epoch", type: "uint48", internalType: "uint48" },
    ],
    outputs: [
      {
        name: "tokenStakes",
        type: "tuple[]",
        internalType: "struct IValidationServiceManager.TokenStake[]",
        components: [
          { name: "token", type: "address", internalType: "address" },
          { name: "stake", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorInfos",
    inputs: [{ name: "epoch", type: "uint48", internalType: "uint48" }],
    outputs: [
      {
        name: "operatorInfos",
        type: "tuple[]",
        internalType: "struct IValidationServiceManager.OperatorInfo[]",
        components: [
          {
            name: "operatorAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "operatingAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "stakes",
            type: "tuple[]",
            internalType: "struct IValidationServiceManager.TokenStake[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "address",
              },
              {
                name: "stake",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          { name: "stake", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorOperatingAddressAt",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      { name: "timestamp", type: "uint48", internalType: "uint48" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorStake",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      { name: "epoch", type: "uint48", internalType: "uint48" },
    ],
    outputs: [{ name: "stake", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorTokenStake",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      { name: "token", type: "address", internalType: "address" },
      { name: "epoch", type: "uint48", internalType: "uint48" },
    ],
    outputs: [{ name: "stake", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSubnetwork",
    inputs: [{ name: "index", type: "uint96", internalType: "uint96" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokenAddress",
    inputs: [
      {
        name: "collateralOrToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokenTotalStake",
    inputs: [
      { name: "token", type: "address", internalType: "address" },
      { name: "epoch", type: "uint48", internalType: "uint48" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTotalStake",
    inputs: [{ name: "epoch", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVaults",
    inputs: [{ name: "epoch", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isActiveVault",
    inputs: [{ name: "vault", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "operatorStakeCache",
    inputs: [
      { name: "", type: "uint48", internalType: "uint48" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "operatorTokenStakeCache",
    inputs: [
      { name: "", type: "uint48", internalType: "uint48" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauseOperator",
    inputs: [{ name: "operator", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseToken",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseVault",
    inputs: [{ name: "vault", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerOperator",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      {
        name: "operatingAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerToken",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerVault",
    inputs: [{ name: "vault", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "respondToTask",
    inputs: [
      { name: "clusterId", type: "string", internalType: "string" },
      { name: "rollupId", type: "string", internalType: "string" },
      {
        name: "referenceTaskIndex",
        type: "uint32",
        internalType: "uint32",
      },
      { name: "response", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rollupTaskInfos",
    inputs: [{ name: "", type: "string", internalType: "string" }],
    outputs: [
      {
        name: "latestTaskNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setSubnetworksCnt",
    inputs: [
      {
        name: "_subnetworksCnt",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "slash",
    inputs: [
      { name: "epoch", type: "uint48", internalType: "uint48" },
      { name: "operator", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "subnetworksCnt",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenTotalStakeCache",
    inputs: [
      { name: "", type: "uint48", internalType: "uint48" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalStakeCache",
    inputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalStakeCached",
    inputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpauseOperator",
    inputs: [{ name: "operator", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpauseToken",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpauseVault",
    inputs: [{ name: "vault", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unregisterOperator",
    inputs: [{ name: "operator", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unregisterToken",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unregisterVault",
    inputs: [{ name: "vault", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateOperatingAddress",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      {
        name: "operatingAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verify",
    inputs: [
      { name: "rollupId", type: "string", internalType: "string" },
      { name: "blockNumber", type: "uint64", internalType: "uint64" },
      { name: "order", type: "uint256", internalType: "uint256" },
      { name: "proof", type: "bytes32[]", internalType: "bytes32[]" },
      { name: "leaf", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "NewTaskCreated",
    inputs: [
      {
        name: "clusterId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "rollupId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referenceTaskIndex",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "blockNumber",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "blockCommitment",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "taskCreatedBlock",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegisterOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "operatingAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegisterToken",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RegisterVault",
    inputs: [
      {
        name: "vault",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TaskResponded",
    inputs: [
      {
        name: "clusterId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "rollupId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "referenceTaskIndex",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "response",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UnregisterOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UnregisterToken",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UnregisterVault",
    inputs: [
      {
        name: "vault",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateOperating",
    inputs: [
      {
        name: "operator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "operatingAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadyAdded", inputs: [] },
  { type: "error", name: "AlreadyEnabled", inputs: [] },
  { type: "error", name: "CheckpointUnorderedInsertion", inputs: [] },
  { type: "error", name: "DuplicateOperatingAddress", inputs: [] },
  {
    type: "error",
    name: "EnumerableMapNonexistentKey",
    inputs: [{ name: "key", type: "bytes32", internalType: "bytes32" }],
  },
  { type: "error", name: "InvalidEpoch", inputs: [] },
  { type: "error", name: "InvalidSubnetworksCnt", inputs: [] },
  { type: "error", name: "NotEnabled", inputs: [] },
  { type: "error", name: "OperatorAlreadyRegistered", inputs: [] },
  { type: "error", name: "OperatorGracePeriodNotPassed", inputs: [] },
  { type: "error", name: "OperatorNotActive", inputs: [] },
  { type: "error", name: "OperatorNotOptedIn", inputs: [] },
  { type: "error", name: "OperatorNotRegistered", inputs: [] },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "SafeCastOverflowedUintDowncast",
    inputs: [
      { name: "bits", type: "uint8", internalType: "uint8" },
      { name: "value", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "SlashingWindowTooShort", inputs: [] },
  { type: "error", name: "TokenAlreadyRegistered", inputs: [] },
  { type: "error", name: "TokenGracePeriodNotPassed", inputs: [] },
  { type: "error", name: "TokenNotWhitelisted", inputs: [] },
  { type: "error", name: "TooBigSlashAmount", inputs: [] },
  { type: "error", name: "TooOldEpoch", inputs: [] },
  { type: "error", name: "UnknownSlasherType", inputs: [] },
  { type: "error", name: "VaultAlreadyRegistered", inputs: [] },
  { type: "error", name: "VaultEpochTooShort", inputs: [] },
  { type: "error", name: "VaultGracePeriodNotPassed", inputs: [] },
  { type: "error", name: "VaultNotRegisteredInSymbiotic", inputs: [] },
];

const vaultAbi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "delegatorFactory",
        type: "address",
        internalType: "address",
      },
      {
        name: "slasherFactory",
        type: "address",
        internalType: "address",
      },
      { name: "vaultFactory", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DEFAULT_ADMIN_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DELEGATOR_FACTORY",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DEPOSITOR_WHITELIST_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DEPOSIT_LIMIT_SET_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DEPOSIT_WHITELIST_SET_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "FACTORY",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "IS_DEPOSIT_LIMIT_SET_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SLASHER_FACTORY",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeBalanceOf",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeBalanceOfAt",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "timestamp", type: "uint48", internalType: "uint48" },
      { name: "hints", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeShares",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeSharesAt",
    inputs: [
      { name: "timestamp", type: "uint48", internalType: "uint48" },
      { name: "hint", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeSharesOf",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeSharesOfAt",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "timestamp", type: "uint48", internalType: "uint48" },
      { name: "hint", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeStake",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeStakeAt",
    inputs: [
      { name: "timestamp", type: "uint48", internalType: "uint48" },
      { name: "hint", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      { name: "recipient", type: "address", internalType: "address" },
      { name: "epoch", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimBatch",
    inputs: [
      { name: "recipient", type: "address", internalType: "address" },
      { name: "epochs", type: "uint256[]", internalType: "uint256[]" },
    ],
    outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateral",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currentEpoch",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currentEpochStart",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "delegator",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      { name: "onBehalfOf", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "depositedAmount",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "mintedShares", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositLimit",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositWhitelist",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "epochAt",
    inputs: [{ name: "timestamp", type: "uint48", internalType: "uint48" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "epochDuration",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "epochDurationInit",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoleAdmin",
    inputs: [{ name: "role", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialVersion",
        type: "uint64",
        internalType: "uint64",
      },
      { name: "owner_", type: "address", internalType: "address" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isDelegatorInitialized",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isDepositLimit",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isDepositorWhitelisted",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "value", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isInitialized",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSlasherInitialized",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isWithdrawalsClaimed",
    inputs: [
      { name: "epoch", type: "uint256", internalType: "uint256" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "value", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "migrate",
    inputs: [
      { name: "newVersion", type: "uint64", internalType: "uint64" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nextEpochStart",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onSlash",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      {
        name: "captureTimestamp",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    outputs: [
      {
        name: "slashedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "previousEpochStart",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      { name: "claimer", type: "address", internalType: "address" },
      { name: "shares", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "withdrawnAssets",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "mintedShares", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      {
        name: "callerConfirmation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDelegator",
    inputs: [{ name: "delegator_", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDepositLimit",
    inputs: [{ name: "limit", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDepositWhitelist",
    inputs: [{ name: "status", type: "bool", internalType: "bool" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDepositorWhitelistStatus",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "status", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setIsDepositLimit",
    inputs: [{ name: "status", type: "bool", internalType: "bool" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSlasher",
    inputs: [{ name: "slasher_", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "slashableBalanceOf",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "slasher",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "staticDelegateCall",
    inputs: [
      { name: "target", type: "address", internalType: "address" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalStake",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [{ name: "", type: "uint64", internalType: "uint64" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      { name: "claimer", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "burnedShares",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "mintedShares", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawalShares",
    inputs: [{ name: "epoch", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawalSharesOf",
    inputs: [
      { name: "epoch", type: "uint256", internalType: "uint256" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawals",
    inputs: [{ name: "epoch", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawalsOf",
    inputs: [
      { name: "epoch", type: "uint256", internalType: "uint256" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Claim",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "epoch",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ClaimBatch",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "epochs",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Deposit",
    inputs: [
      {
        name: "depositor",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "onBehalfOf",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "shares",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OnSlash",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "captureTimestamp",
        type: "uint48",
        indexed: false,
        internalType: "uint48",
      },
      {
        name: "slashedAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleAdminChanged",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "previousAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "newAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleGranted",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleRevoked",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetDelegator",
    inputs: [
      {
        name: "delegator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetDepositLimit",
    inputs: [
      {
        name: "limit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetDepositWhitelist",
    inputs: [
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetDepositorWhitelistStatus",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetIsDepositLimit",
    inputs: [
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetSlasher",
    inputs: [
      {
        name: "slasher",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdraw",
    inputs: [
      {
        name: "withdrawer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "burnedShares",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "mintedShares",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AccessControlBadConfirmation", inputs: [] },
  {
    type: "error",
    name: "AccessControlUnauthorizedAccount",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "neededRole", type: "bytes32", internalType: "bytes32" },
    ],
  },
  { type: "error", name: "AlreadyClaimed", inputs: [] },
  { type: "error", name: "AlreadyInitialized", inputs: [] },
  { type: "error", name: "AlreadySet", inputs: [] },
  { type: "error", name: "CheckpointUnorderedInsertion", inputs: [] },
  { type: "error", name: "DelegatorAlreadyInitialized", inputs: [] },
  { type: "error", name: "DepositLimitReached", inputs: [] },
  { type: "error", name: "InsufficientClaim", inputs: [] },
  { type: "error", name: "InsufficientDeposit", inputs: [] },
  { type: "error", name: "InsufficientRedemption", inputs: [] },
  { type: "error", name: "InsufficientWithdrawal", inputs: [] },
  { type: "error", name: "InvalidAccount", inputs: [] },
  { type: "error", name: "InvalidCaptureEpoch", inputs: [] },
  { type: "error", name: "InvalidClaimer", inputs: [] },
  { type: "error", name: "InvalidCollateral", inputs: [] },
  { type: "error", name: "InvalidDelegator", inputs: [] },
  { type: "error", name: "InvalidEpoch", inputs: [] },
  { type: "error", name: "InvalidEpochDuration", inputs: [] },
  { type: "error", name: "InvalidInitialization", inputs: [] },
  { type: "error", name: "InvalidLengthEpochs", inputs: [] },
  { type: "error", name: "InvalidOnBehalfOf", inputs: [] },
  { type: "error", name: "InvalidRecipient", inputs: [] },
  { type: "error", name: "InvalidSlasher", inputs: [] },
  { type: "error", name: "InvalidTimestamp", inputs: [] },
  { type: "error", name: "MissingRoles", inputs: [] },
  { type: "error", name: "NoPreviousEpoch", inputs: [] },
  { type: "error", name: "NotDelegator", inputs: [] },
  { type: "error", name: "NotFactory", inputs: [] },
  { type: "error", name: "NotInitialized", inputs: [] },
  { type: "error", name: "NotInitializing", inputs: [] },
  { type: "error", name: "NotSlasher", inputs: [] },
  { type: "error", name: "NotWhitelistedDepositor", inputs: [] },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
  {
    type: "error",
    name: "SafeCastOverflowedUintDowncast",
    inputs: [
      { name: "bits", type: "uint8", internalType: "uint8" },
      { name: "value", type: "uint256", internalType: "uint256" },
    ],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
  },
  { type: "error", name: "SlasherAlreadyInitialized", inputs: [] },
  { type: "error", name: "TooMuchRedeem", inputs: [] },
  { type: "error", name: "TooMuchWithdraw", inputs: [] },
];

const radiusTestERC20Abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      { name: "owner", type: "address", internalType: "address" },
      { name: "spender", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      { name: "spender", type: "address", internalType: "address" },
      { name: "value", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "value", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      { name: "from", type: "address", internalType: "address" },
      { name: "to", type: "address", internalType: "address" },
      { name: "value", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      { name: "spender", type: "address", internalType: "address" },
      { name: "allowance", type: "uint256", internalType: "uint256" },
      { name: "needed", type: "uint256", internalType: "uint256" },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      { name: "sender", type: "address", internalType: "address" },
      { name: "balance", type: "uint256", internalType: "uint256" },
      { name: "needed", type: "uint256", internalType: "uint256" },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [{ name: "approver", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [{ name: "receiver", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [{ name: "sender", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [{ name: "spender", type: "address", internalType: "address" }],
  },
];
// ES6 export for frontend (browser)
export {
  livenessRadius,
  livenessRadiusAbi,
  validationServiceManagerAbi,
  vaultAbi,
  radiusTestERC20Abi,
};
