name: Generate and Summarize Sprint Report

on:
  workflow_dispatch:

jobs:
  generate_sprint_report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Sprint Report
        id: generate_report
        uses: actions/github-script@v4
        with:
          script: |
            const { data: issues } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              since: '2024-09-01T00:00:00Z',  // Modify sprint period here
              per_page: 100
            });
            
            let report = `# Sprint Summary\n\n## Closed Issues\n`;
            issues.forEach(issue => {
              report += `- [${issue.title}](${issue.html_url}) - Closed by @${issue.user.login}\n`;
            });

            return { report };

      - name: Save report as environment variable
        run: |
          echo "REPORT=${{ steps.generate_report.outputs.report }}" >> $GITHUB_ENV

      - name: Send report to OpenAI for summarization
        id: summarize_report
        run: |
          curl https://api.openai.com/v1/chat/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
          -d "$(jq -n --arg content "$REPORT" '{model: "gpt-4", messages: [{role: "user", content: $content}], max_tokens: 300, temperature: 0.7}')"

      - name: Output the summary
        run: |
          cat response.json
          SUMMARY=$(jq -r '.choices[0].message.content' < response.json)
          echo "Summary: $SUMMARY"
